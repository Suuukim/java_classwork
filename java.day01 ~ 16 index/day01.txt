3. 변수 및 형변환
	3. 변수
	
	3-1)변수 (variable)란?
		-수학에서 변수란 '변하는 수'라고 정의하지만
		  프로그래밍에서는 변수란 "값을 저장할 수 있는 메모리상의 공간"을 의미한다.
		*변수란, 단 하나의 값을 저장할 수 있는 메모리 공간.
		-하나의 변수에 단 하나의 값만 저장할 수 있으므로 새로운 값을 저장하면 기존의 값은 사라진다.
		
	3-2)변수의 선언과 초기화
		①변수의 선언
		-변수를 사용하려면 변수를 선언해야 하는데 변수의 선언방법은 다음과 같다.
			int age;		//age라는 이름의 변수를 선언.
					//int	==> 변수 타입
					//age	==> 변수 이름
		-'변수타입'은 변수에 저장될 값이 어떤 타입인지를 지정하는 것이다.
		-자바는 정수형, 실수형, 문자형 등의 다양한 타입을 제공한다.

		**변수를 선언하면 메모리의 빈 공간에 '변수 타입'에 알맞는 크기의 저장공간이 확보되고,
		   앞으로 이 저장 공간은 '변수이름'을 통해 사용할 수 있다. **

		②변수의 초기화
		-변수를 선언한 이후부터는 변수를 사용할 수 있으나 그 전에 반드시
		 변수를 '초기화 (initialization)'를 해야한다.
			int age = 10;
		
			int age;
			age = 10;
		-'='은 수학에서 양변의 값이 같다는 뜻이지만, 자바에서는 오른쪽의 값을
		 왼쪽 (변수)에 저장하라는 뜻이다.
			==> '=' 왼쪽에는 반드시 변수가 와야한다.

	3-3)변수의 명명규칙
		-대소문자가 구분되며 길이의 제한은 없다.
			int apple;
			int apPle;
		-예약어를 사용해서는 안된다.
			inf, for, while, class
			int if; (X)
		-숫자로 시작해서는 안된다.
			int 1number; (X)
		-특수문자는 '_', '$'만 허용된다.
		-상수 이름은 모두 대문자로 한다.
		==> 변수의 이름은 짧을수록 좋지만, 약간 길더라도 용도를 알기 쉽게 '의미있는 이름'으로 하는 것이 바람직스럽다.

			int categorynumber;
			int categoryNumber;
			int category_number;
			const int MAX_NUMBER = 10; (상수)

	3-4)변수의 타입 (type)
		값(data)		-문자
				-숫자		-정수
						-실수

		-이러한 값의 종류에 따라 값이 저장될 공간의 크기와 저장형식을 정의한 것이 자료형 (data type)이다.
		-자료형에는 문자형, 정수형, 실수형 등이 있으며, 변수를 선언할 때는 저장하려는 값의 특성을 고려하여
		 가장 알맞는 변수의 타입으로 선택하면 된다.

		*기본형과 참조형
		-자료형은 기본형과 참조형 두 가지로 나눌 수 있는데
		 기본형 변수는 실제 값 (data)을 저장하는 반면,
		 참조형 변수는 어떤 값이 저장되어 있는 주소 (memory address)를 값으로 갖는다.

			①기본형 (primitive type)
				논리형(boolean), 문자형(char), 정수형(byte, short, int, long), 실수형(float, double)
			==>계산을 위한 실제 값을 저장한다. (총 8개)
			
			②참조형 (reference type)
				객체의 주소를 저장한다. 8개의 기본형을 제외한 나머지 타입

	3-5)기본형(primitive type)
		종류				타입
		
		논리형(boolean)			true와 fasel중 하나를 값으로 가지며 조건식과 논리적 계산에 사용된다.

		문자형(char)			문자를 저장하는데 사용하며, 변수에 단 하나의 문자만 저장할 수 있다.
		
		정수형				byte, short, "int", long 정수를 저장하는데 사용되며 주로  int가 사용된다.

		실수형				float, "double" 실수를 저장하는데 사용되며 주로 double이 사용된다.

		1byte = 8bit
		bit -> byte -> KB -> MB -> GB -> TB

			
			1byte		2byte		4byte		8byte
		논리형	boolean
		문자형			char
		정수형	byte		short		int		long
		실수형					float		double


	3-6)상수와 리터럴(constant & literal)
		-상수는 변수와 마찬가지로 값을 저장할 수 있는 공간이지만
		 한번 값을 저장하면 다른 값으로 변경할 수 없다.
		-상수를 선언하는 방법은 동일하지만 변수 앞에 키워드 final을 붙여주면 된다.
		-상수는 반드시 선언과 동시에 초기화를 해야 하며, 상수의 값을 변경하는 것이 허용되지 않는다.

		①리터럴(literal)
			-리터럴은 단지 우리가 기존에 알고 있는 '상수'의 다른 이름일 뿐이다.
				==>하나의 값이라고 생각하면 된다.

			*변수			하나의 값을 저장하기 위한 공간
			*상수			값을 한번만 저장할 수 있는 공간
			*리터럴			그 자체로 값을 의미하는 것.

		②상수가 필요한 이유
			int triangleArea = ( 20 * 10 ) / 2;		//삼각형의 넓이를 구하는 공식

			final int WIDTH = 20;	//폭
			final int HEIGHT = 10;	//높이

			int triangleAea = (WIDTH * HEIGHT )/2;
		==>상수는 리터럴에 의미있는 이름을 붙여서 코드의 이해와 수정을 쉽게 만든다.

		③리터럴 타입과 접미사
			종류		접미사
			논리형		없음
			정수형 		L(long)
			실수형		f(float)
			문자형		없음
			문자열		없음
			
	3-7)형변환 (casting)
		①형변환이란 ?
		-형변환이란 변수의 타입을 다른 타입으로 변환하는 것
		-종류에는 묵시적 형변환 (자동 형변환), 명시적 형변환 (강제 형변환) 2가지가 있다.

		②형변환 방법
		-형변환하고자 하는 변수나 리터럴의 앞에 변환하고자 하는 타입을 괄호()와 함께 붙여주면 된다.
		-여기서 사용되는 괄호()는 '캐스트 연산자' 또는 '형변환 연산자'라고 한다.
			double d = 85.4;
			int score = (int)d;
			System.out.println(score);		//85
			
		-큰 타입에서 작은 타입으로 변환하는 경우 크기의 차이만큼 잘려나간다.
			==>값 손실(loss of data)가 발생할 수 있다.
		-반대로 작은 타입에서 큰 타입으로 변환하는 경우 값 손실이 발생하지 않는다.
			double d1 = 80;
			System.out.println(d1);		//80.0

4.출력메소드		
	4-1)이스케이프 문자(escape character)
		-영문자 이외의 tab이나 엔터 등의 특수문자를 저장하는 방법.

		특수문자			문자리터럴
		tab			\t
		new line			\n
		역슬래시			\\
		큰따옴표			\"
		작은따옴표		\'

	4-2)여러가지 출력 방식
		System.out.println();		==>출력 후 줄바꿈O
		System.out.print();		==>출력 후 줄바꿈X
		
		System.out.prinf();
			-printf()는 지시자를 통해 변수의 값을 여러가지 형식으로 변환하여 출력하는 기능을 가지고 있다.
			-지시자는 값을 어떻게 출력할 것인지를 지정해주는 역할을 한다.

		지시자				설명
		%b			논리형 (boolean)형식으로 출력
		%d			정수형 형식으로 출력
		%f			실수형 형식으로 출력
		%c			문자형 형식으로 출력
		%s			문자열 형식으로 출력












